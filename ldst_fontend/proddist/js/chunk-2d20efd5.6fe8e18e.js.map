{"version":3,"sources":["webpack:///./src/service/api/dataStoredProcedure.js"],"names":["table","runSql","params","Promise","resolve","reject","http","post","then","res","err","addUpdateProcedure","delProcedure","getProcedureInfo","getProcedureAll"],"mappings":"yXAUMA,EAAQ,iCAIDC,EAAS,WAAiB,IAAhBC,EAAgB,uDAAP,GAE9B,OADAA,EAAO,WAAaF,EACb,IAAIG,SAAQ,SAACC,EAASC,GAC3BC,aAAKC,KAAK,2BAA4BL,GACnCM,MAAK,SAAAC,GACJL,EAAQK,MAFZ,UAIS,SAAAC,GACLL,EAAOK,UAMFC,EAAqB,WAAiB,IAAhBT,EAAgB,uDAAP,GAE1C,OADAA,EAAO,WAAaF,EACb,IAAIG,SAAQ,SAACC,EAASC,GAC3BC,aAAKC,KAAK,kCAAmCL,GAC1CM,MAAK,SAAAC,GACJL,EAAQK,MAFZ,UAIS,SAAAC,GACLL,EAAOK,UAOFE,EAAe,WAAiB,IAAhBV,EAAgB,uDAAP,GAEpC,OADAA,EAAO,WAAaF,EACb,IAAIG,SAAQ,SAACC,EAASC,GAC3BC,aAAKC,KAAK,iCAAkCL,GACzCM,MAAK,SAAAC,GACJL,EAAQK,MAFZ,UAIS,SAAAC,GACLL,EAAOK,UAMFG,EAAmB,WAAiB,IAAhBX,EAAgB,uDAAP,GAExC,OADAA,EAAO,WAAaF,EACb,IAAIG,SAAQ,SAACC,EAASC,GAC3BC,aAAKC,KAAK,qCAAsCL,GAC7CM,MAAK,SAAAC,GACJL,EAAQK,MAFZ,UAIS,SAAAC,GACLL,EAAOK,UAMFI,EAAkB,WAAiB,IAAhBZ,EAAgB,uDAAP,GAEvC,OADAA,EAAO,WAAaF,EACb,IAAIG,SAAQ,SAACC,EAASC,GAC3BC,aAAKC,KAAK,oCAAqCL,GAC5CM,MAAK,SAAAC,GACJL,EAAQK,MAFZ,UAIS,SAAAC,GACLL,EAAOK","file":"js/chunk-2d20efd5.6fe8e18e.js","sourcesContent":["/*\r\n * @Description: \r\n * @Autor: lwq\r\n * @Date: 2020-08-10 19:22:22\r\n * @LastEditors: lwq\r\n * @LastEditTime: 2020-08-11 10:21:06\r\n * @FilePath: \\mrc-base-server-view\\src\\service\\api\\dataStoredProcedure.js\r\n */\r\n// 存储空间管理接口\r\nimport http from '../httpConfig'\r\nconst table = 'mrbase_sys_datamodel_procedure'\r\n\r\n\r\n// 运行储存过程语句\r\nexport const runSql = (params = {}) => {\r\n  params['~table~'] = table\r\n  return new Promise((resolve, reject) => {\r\n    http.post('/api/procedure/runSql/v1', params)\r\n      .then(res => {\r\n        resolve(res)\r\n      })\r\n      .catch(err => {\r\n        reject(err)\r\n      })\r\n  })\r\n}\r\n\r\n// 新增和修改储存过程\r\nexport const addUpdateProcedure = (params = {}) => {\r\n  params['~table~'] = table\r\n  return new Promise((resolve, reject) => {\r\n    http.post('/api/procedure/saveProcedure/v1', params)\r\n      .then(res => {\r\n        resolve(res)\r\n      })\r\n      .catch(err => {\r\n        reject(err)\r\n      })\r\n  })\r\n}\r\n\r\n\r\n// 删除储存过程\r\nexport const delProcedure = (params = {}) => {\r\n  params['~table~'] = table\r\n  return new Promise((resolve, reject) => {\r\n    http.post('/api/procedure/delProcedure/v1', params)\r\n      .then(res => {\r\n        resolve(res)\r\n      })\r\n      .catch(err => {\r\n        reject(err)\r\n      })\r\n  })\r\n}\r\n\r\n// 获取储存过程信息\r\nexport const getProcedureInfo = (params = {}) => {\r\n  params['~table~'] = table\r\n  return new Promise((resolve, reject) => {\r\n    http.post('/api/procedure/getProcedureInfo/v1', params)\r\n      .then(res => {\r\n        resolve(res)\r\n      })\r\n      .catch(err => {\r\n        reject(err)\r\n      })\r\n  })\r\n}\r\n\r\n// 获取所有储存过程信息\r\nexport const getProcedureAll = (params = {}) => {\r\n  params['~table~'] = table\r\n  return new Promise((resolve, reject) => {\r\n    http.post('/api/procedure/getProcedureAll/v1', params)\r\n      .then(res => {\r\n        resolve(res)\r\n      })\r\n      .catch(err => {\r\n        reject(err)\r\n      })\r\n  })\r\n}"],"sourceRoot":""}