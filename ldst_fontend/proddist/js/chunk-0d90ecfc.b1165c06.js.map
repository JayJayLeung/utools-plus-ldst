{"version":3,"sources":["webpack:///./src/components/Message/main.vue?4f71","webpack:///src/components/Message/main.vue","webpack:///./src/components/Message/main.vue?c243","webpack:///./src/components/Message/main.vue","webpack:///./src/components/Message/msgindex.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","directives","name","rawName","value","expression","class","type","iconClass","center","showClose","customClass","on","clearTimer","startTimer","typeClass","_t","dangerouslyUseHTMLString","staticClass","domProps","_s","message","_v","close","_e","staticRenderFns","success","info","warning","error","data","visible","duration","onClose","closed","timer","computed","watch","newVal","$el","addEventListener","destroyElement","methods","removeEventListener","$destroy","parentNode","removeChild","clearTimeout","setTimeout","keydown","e","keyCode","mounted","document","beforeDestroy","component","instance","MessageConstructor","Vue","extend","Main","instances","seed","Message","options","prototype","$isServer","userOnClose","id","vm","$mount","body","appendChild","dom","push","forEach","i","len","length","splice","closeAll"],"mappings":"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","file":"js/chunk-0d90ecfc.b1165c06.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{\"name\":\"el-message-fade\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.visible),expression:\"visible\"}],class:[\n      'el-message',\n      _vm.type && !_vm.iconClass ? (\"el-message--\" + _vm.type) : '',\n      _vm.center ? 'is-center' : '',\n      _vm.showClose ? 'is-closable' : '',\n      _vm.customClass\n    ],attrs:{\"role\":\"alert\"},on:{\"mouseenter\":_vm.clearTimer,\"mouseleave\":_vm.startTimer}},[(_vm.iconClass)?_c('i',{class:_vm.iconClass}):_c('i',{class:_vm.typeClass}),_vm._t(\"default\",[(!_vm.dangerouslyUseHTMLString)?_c('p',{staticClass:\"el-message__content\"},[_vm._v(_vm._s(_vm.message))]):_c('p',{staticClass:\"el-message__content\",domProps:{\"innerHTML\":_vm._s(_vm.message)}})]),(_vm.showClose)?_c('i',{staticClass:\"el-message__closeBtn el-icon-close\",on:{\"click\":_vm.close}}):_vm._e()],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <transition name=\"el-message-fade\">\r\n    <div :class=\"[\r\n        'el-message',\r\n        type && !iconClass ? `el-message--${ type }` : '',\r\n        center ? 'is-center' : '',\r\n        showClose ? 'is-closable' : '',\r\n        customClass\r\n      ]\"\r\n         v-show=\"visible\"\r\n         @mouseenter=\"clearTimer\"\r\n         @mouseleave=\"startTimer\"\r\n         role=\"alert\">\r\n      <!--自定义图标存在时显示-->\r\n      <i :class=\"iconClass\"\r\n         v-if=\"iconClass\"></i>\r\n      <!--自定义图标不存在时根据type显示图标-->\r\n      <i :class=\"typeClass\"\r\n         v-else></i>\r\n      <slot>\r\n        <!--用户设置的message的参数为字符串时，显示字符串-->\r\n        <p v-if=\"!dangerouslyUseHTMLString\"\r\n           class=\"el-message__content\">{{ message }}</p>\r\n        <!--用户设置的message的参数为VNode时，在此处显示-->\r\n        <p v-else\r\n           v-html=\"message\"\r\n           class=\"el-message__content\"></p>\r\n      </slot>\r\n      <!--当用户设置的关闭按钮显示为true时，显示关闭图标-->\r\n      <i v-if=\"showClose\"\r\n         class=\"el-message__closeBtn el-icon-close\"\r\n         @click=\"close\"></i>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script type=\"text/babel\">\r\nconst typeMap = {\r\n  success: 'success',\r\n  info: 'info',\r\n  warning: 'warning',\r\n  error: 'error'\r\n};\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      visible: false,\r\n      message: '', //消息文字\r\n      duration: 3000, //显示时间, 毫秒。设为 0 则不会自动关闭\r\n      type: 'info',\r\n      iconClass: '', //自定义图标的类名，会覆盖 type\r\n      customClass: '', //自定义类名\r\n      onClose: null,\r\n      showClose: false, //是否显示关闭按钮\r\n      closed: false, //用来判断消息提示弹窗是否关闭\r\n      timer: null,\r\n      dangerouslyUseHTMLString: false, //是否将 message 属性作为 HTML 片段处理\r\n      center: false\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    // 根据type返回对应的图标类名\r\n    typeClass () {\r\n      return this.type && !this.iconClass\r\n        ? `el-message__icon el-icon-${typeMap[this.type]}`\r\n        : '';\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    closed (newVal) {\r\n      if (newVal) {\r\n        this.visible = false;\r\n        //transitionend事件在 CSS 完成过渡后触发。\r\n        this.$el.addEventListener('transitionend', this.destroyElement);\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    destroyElement () {\r\n      this.$el.removeEventListener('transitionend', this.destroyElement);\r\n      //完全销毁一个实例。清理它与其它实例的连接，解绑它的全部指令及事件监听器。\r\n      // 在vue v1.x中$destroy(true)的参数为true时，则从DOM中删除其关联的DOM元素或片段；在vue2.0中不需要加参数\r\n      this.$destroy(true);\r\n      this.$el.parentNode.removeChild(this.$el);\r\n    },\r\n\r\n    close () {\r\n      this.closed = true;\r\n      if (typeof this.onClose === 'function') {\r\n        this.onClose(this);\r\n      }\r\n    },\r\n    //鼠标进入消息提示弹窗时，定时器清空，弹窗一直显示\r\n    clearTimer () {\r\n      clearTimeout(this.timer);\r\n    },\r\n    // 鼠标离开消息提示弹窗时，设置定时器，弹窗在this.duration关闭\r\n    startTimer () {\r\n      if (this.duration > 0) {\r\n        this.timer = setTimeout(() => {\r\n          if (!this.closed) {\r\n            this.close();\r\n          }\r\n        }, this.duration);\r\n      }\r\n    },\r\n    // esc关闭消息\r\n    keydown (e) {\r\n      if (e.keyCode === 27) {\r\n        if (!this.closed) {\r\n          this.close();\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.startTimer();\r\n    document.addEventListener('keydown', this.keydown);\r\n  },\r\n  beforeDestroy () {\r\n    document.removeEventListener('keydown', this.keydown);\r\n  }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./main.vue?vue&type=template&id=63d1e61a&\"\nimport script from \"./main.vue?vue&type=script&lang=js&\"\nexport * from \"./main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/*\r\n * @Description:\r\n * @Autor: yd\r\n * @Date: 2020-07-25 10:03:13\r\n * @LastEditors: yd\r\n * @LastEditTime: 2020-07-25 10:39:27\r\n */\r\nimport Vue from 'vue';\r\nimport Main from './main.vue';\r\n// import { PopupManager } from 'element-ui/src/utils/popup';\r\n// import { isVNode } from 'element-ui/src/utils/vdom';\r\nlet MessageConstructor = Vue.extend(Main);\r\n\r\nlet instance;\r\nlet instances = []; // 存放当前未close的message\r\nlet seed = 1;\r\n\r\nconst Message = function (options) {\r\n  // 当前 Vue 实例是否运行于服务器\r\n  if (Vue.prototype.$isServer) return;\r\n  options = options || {};\r\n  if (typeof options === 'string') {\r\n    options = {\r\n      message: options\r\n    };\r\n  }\r\n  //userOnClose用来存放用户设置关闭时的回调函数, 参数为被关闭的 message 实例\r\n  let userOnClose = options.onClose;\r\n  let id = 'message_' + seed++;\r\n\r\n  // 重写options.onClose\r\n  options.onClose = function () {\r\n    Message.close(id, userOnClose);\r\n  };\r\n  // 创建message实例,此时数据还没有挂载呢，$el 属性目前不可见，无法访问到数据和真实的dom\r\n  instance = new MessageConstructor({\r\n    data: options\r\n  });\r\n  instance.id = id;\r\n\r\n  //判断instance.message是不是虚拟节点\r\n  // if (isVNode(instance.message)) {\r\n  //   instance.$slots.default = [instance.message];\r\n  //   instance.message = null;\r\n  // }\r\n  //手动地挂载一个未挂载的实例。$mount(param)中param不存在时，模板将被渲染为文档之外的的元素，并且你必须使用原生 DOM API 把它插入文档中。\r\n  instance.vm = instance.$mount();\r\n  //用原生DOM API把它插入body中\r\n  document.body.appendChild(instance.vm.$el);\r\n  instance.vm.visible = true;\r\n  instance.dom = instance.vm.$el;\r\n  // css z-index层级叠加，覆盖之前已出现但还未close的message\r\n  // instance.dom.style.zIndex = PopupManager.nextZIndex();\r\n  instances.push(instance);\r\n  return instance.vm;\r\n};\r\n\r\n// 给Message增加四个直接调用的方法\r\n// 支持this.$message.success('xxx')方式调用，等同于this.$message({type: 'success',message: 'xxx'})\r\n['success', 'warning', 'info', 'error'].forEach(type => {\r\n  Message[type] = options => {\r\n    if (typeof options === 'string') {\r\n      options = {\r\n        message: options\r\n      };\r\n    }\r\n    options.type = type;\r\n    return Message(options);\r\n  };\r\n});\r\n\r\n// 组件的close方法中调用onClose再调该方法\r\nMessage.close = function (id, userOnClose) {\r\n  for (let i = 0, len = instances.length; i < len; i++) {\r\n    if (id === instances[i].id) { // 通过id找到该message实例\r\n      if (typeof userOnClose === 'function') {\r\n        userOnClose(instances[i]);\r\n      }\r\n      instances.splice(i, 1);  // 移除message实例\r\n      break;\r\n    }\r\n  }\r\n};\r\n//关闭所有的消息提示弹窗\r\nMessage.closeAll = function () {\r\n  for (let i = instances.length - 1; i >= 0; i--) {\r\n    instances[i].close();\r\n  }\r\n};\r\n\r\nexport default Message;"],"sourceRoot":""}