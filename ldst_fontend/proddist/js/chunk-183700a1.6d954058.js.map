{"version":3,"sources":["webpack:///./src/views/timedTask/modules/journal.vue?d9e5","webpack:///src/views/timedTask/modules/journal.vue","webpack:///./src/views/timedTask/modules/journal.vue?f39d","webpack:///./src/views/timedTask/modules/journal.vue","webpack:///./src/service/api/timedTask.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","headers","options","loading","desserts","on","getlist","scopedSlots","_u","key","fn","ref","item","status","_v","_e","staticRenderFns","components","props","disabled","type","Boolean","default","data","pagesize","cpage","$store","state","totalCount","totalpage","menulist","computed","created","watch","$route","v","path","mounted","beforeDestroy","commit","methods","component","verifyCron","params","Promise","resolve","reject","http","post","then","res","err","getTimedTaskList","deatailTimedTask","addTimedTask","updateTimedTask","deleteTimedTask","updateTimedTaskStatus","getLogList","executeTimedTask"],"mappings":"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","file":"js/chunk-183700a1.6d954058.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('mrc_ess_table',{attrs:{\"headers\":_vm.headers,\"hideAddBtn\":\"\",\"paginationOptions\":_vm.options,\"slotKey\":['status'],\"isLoading\":_vm.loading,\"items\":_vm.desserts},on:{\"turnPage\":_vm.getlist},scopedSlots:_vm._u([{key:\"item.status\",fn:function(ref){\nvar item = ref.item;\nreturn [(item.status==1)?_c('v-btn',{attrs:{\"rounded\":\"\",\"color\":\"#13a671\",\"dark\":\"\",\"x-small\":\"\"}},[_vm._v(\"成功\")]):_vm._e(),(item.status==0)?_c('v-btn',{attrs:{\"rounded\":\"\",\"color\":\"#999999\",\"dark\":\"\",\"x-small\":\"\"}},[_vm._v(\"失败\")]):_vm._e()]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Description: \r\n * @Autor: yd\r\n * @Date: 2020-07-13 09:23:25\r\n * @LastEditors: lwq\r\n * @LastEditTime: 2020-08-26 10:37:00\r\n--> \r\n<template>\r\n  <div>\r\n    <mrc_ess_table :headers='headers'\r\n                   hideAddBtn\r\n                   :paginationOptions='options'\r\n                   @turnPage='getlist'\r\n                   :slotKey=\"['status']\"\r\n                   :isLoading='loading'\r\n                   :items='desserts'>\r\n      <!-- 状态 -->\r\n      <template v-slot:item.status='{item}'>\r\n        <v-btn rounded\r\n               color=\"#13a671\"\r\n               dark\r\n               x-small\r\n               v-if=\"item.status==1\">成功</v-btn>\r\n        <v-btn rounded\r\n               color=\"#999999\"\r\n               dark\r\n               x-small\r\n               v-if=\"item.status==0\">失败</v-btn>\r\n      </template>\r\n\r\n    </mrc_ess_table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getLogList, executeTimedTask } from '@/service/api/timedTask.js'\r\nimport moment from 'moment'\r\nexport default {\r\n  components: {},\r\n  props: {\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      options: {\r\n        pagesize: 5,//条数\r\n        cpage: this.$store.state.cpage,  //页数\r\n        totalCount: null, //总条数\r\n        totalpage: null, //总页数\r\n      },\r\n      loading: false,\r\n      menulist: [\r\n        { name: this.$t('label_Edit') },\r\n        { name: this.$t('label_Executed_immediately') },\r\n        { name: this.$t('label_delete') },\r\n      ],\r\n      headers: [\r\n        { text: '日志 ID', align: 'start', value: 'logID', sortable: false },\r\n        { text: this.$t('label_The_name_of_the_task'), align: 'start', value: 'job_name', sortable: false },\r\n        { text: this.$t('label_grouping'), value: 'job_group', sortable: false },\r\n        { text: this.$t('label_Call_target_string'), value: 'invoke_target', sortable: false, },\r\n        { text: '耗时', value: 'job_message', sortable: false, },\r\n        { text: '', value: 'status', sortable: false, },\r\n        { text: '执行时间', value: 'created_utc_datetime', sortable: false, },\r\n      ],\r\n      desserts: [],\r\n    };\r\n  },\r\n  computed: {},\r\n  created () { },\r\n  watch: {\r\n    $route (v) {\r\n      if (v.path == '/timedTask') {\r\n        this.getlist()\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.getlist()\r\n  },\r\n  beforeDestroy () {\r\n    this.$store.commit('setCpage', 1)\r\n  },\r\n  methods: {\r\n    async getlist (obj) {\r\n      this.loading = true\r\n      if (obj) {\r\n        const { cpage, pagesize } = obj\r\n        this.options = obj\r\n      }\r\n      const res = await getLogList({\r\n        uuid: this.$store.state.uuid,\r\n        pindex: this.options.cpage,\r\n        psize: this.options.pagesize\r\n      })\r\n      if (res.code == 200) {\r\n        this.desserts = res.data.map((item, index) => {\r\n          item.created_utc_datetime = moment(item.created_utc_datetime).format('YYYY/MM/DD', 'h:mm:ss')\r\n          item.logID = index + 1\r\n          return item\r\n        })\r\n        this.options.totalCount = res.totalCount\r\n        this.options.totalpage = res.totalpage\r\n      }\r\n      // console.log(this.desserts);\r\n      this.loading = false\r\n    },\r\n    // immediately () {\r\n    //   this.$myConfirm({ content: '确认要立即执行该定时任务?' }).then(res => {\r\n    //     executeTimedTask({ uuid: this.$store.state.uuid }).then(res => {\r\n    //       if (res.code === '200') {\r\n    //         this.$store.commit('newsTips', '执行成功')\r\n    //         this.getlist()\r\n    //       }\r\n    //       else {\r\n    //         this.$store.commit('newsTips', res.msg)\r\n    //       }\r\n    //     })\r\n    //   }).catch(err => { })\r\n    // },\r\n    // addemailtemplate () {\r\n    //   this.$store.commit('set_subPage_name', '')\r\n    //   this.$store.commit('set_uuid', '')\r\n    //   this.$store.commit('set_iconstatus', '')  //行内进图标显示\r\n    //   this.$router.push({\r\n    //     name: 'addemailtemplate'\r\n    //   })\r\n    // },\r\n    // godetail (item) {\r\n    //   this.$store.commit('set_iconstatus', true)  //行内进图标显示\r\n    //   this.$store.commit('set_subPage_name', item.template_name)\r\n    //   this.$store.commit('set_uuid', item.uuid)  //\r\n    //   this.$router.push({\r\n    //     name: 'detailemailtemplate'\r\n    //   })\r\n    // },\r\n    // handleClick ({ index }, item) {\r\n    //   switch (index) {\r\n    //     case 0:\r\n    //       this.$store.commit('set_subPage_name', item.template_name)\r\n    //       this.$store.commit('set_iconstatus', false)  //行内进图标显示 \r\n    //       this.$store.commit('set_uuid', item.uuid)  //\r\n    //       this.$router.push({\r\n    //         name: 'detailemailtemplate'\r\n    //       })\r\n    //       break\r\n    //     case 1:\r\n    //       this.$myConfirm({ content: this.$t('message_Confirm_the_deletion') }).then(res => {\r\n    //         deleteemailtemplate({ uuid: item.uuid }).then(res => {\r\n    //           if (res.code === '200') {\r\n    //             this.$store.commit('newsTips', this.$t('message_The_deletion_was_successful'))\r\n    //             if (this.desserts.length = 1) this.options.cpage--\r\n    //             this.getlist()\r\n    //           }\r\n    //         })\r\n    //       })\r\n    //       break\r\n    //   }\r\n    // },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./journal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./journal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./journal.vue?vue&type=template&id=7777620e&scoped=true&\"\nimport script from \"./journal.vue?vue&type=script&lang=js&\"\nexport * from \"./journal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7777620e\",\n  null\n  \n)\n\nexport default component.exports","/*\r\n * @Description:\r\n * @Autor: yd\r\n * @Date: 2020-07-02 11:21:57\r\n * @LastEditors: yd\r\n * @LastEditTime: 2020-07-18 16:11:27\r\n */\r\n//定时任务\r\nimport http from '../httpConfig'\r\n\r\n//验证cron语句是否正确\r\nexport const verifyCron = (params = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    http.post('/api/job/checkCronExpressionIsValid/v1', params)\r\n      .then(res => {\r\n        resolve(res)\r\n      })\r\n      .catch(err => {\r\n        reject(err)\r\n      })\r\n  })\r\n}\r\n\r\n// 查询所有定时任务\r\nexport const getTimedTaskList = (params = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    http.post('/api/job/getTableQuartzAll/v1', params)\r\n      .then(res => {\r\n        resolve(res)\r\n      })\r\n      .catch(err => {\r\n        reject(err)\r\n      })\r\n  })\r\n}\r\n//获取定时任务详情\r\nexport const deatailTimedTask = (params = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    http.post('/api/job/getTableQuartzInfo/v1', params)\r\n      .then(res => {\r\n        resolve(res)\r\n      })\r\n      .catch(err => {\r\n        reject(err)\r\n      })\r\n  })\r\n}\r\n\r\n//新增定时任务接口\r\nexport const addTimedTask = (params = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    http.post('/api/job/addTimedTask/v1', params)\r\n      .then(res => {\r\n        resolve(res)\r\n      })\r\n      .catch(err => {\r\n        reject(err)\r\n      })\r\n  })\r\n}\r\n\r\n//修改定时任务内容\r\nexport const updateTimedTask = (params = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    http.post('/api/job/updateJob/v1', params)\r\n      .then(res => {\r\n        resolve(res)\r\n      })\r\n      .catch(err => {\r\n        reject(err)\r\n      })\r\n  })\r\n}\r\n\r\n\r\n//删除定时任务状态\r\nexport const deleteTimedTask = (params = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    http.post('/api/job/deleteQuartz/v1', params)\r\n      .then(res => {\r\n        resolve(res)\r\n      })\r\n      .catch(err => {\r\n        reject(err)\r\n      })\r\n  })\r\n}\r\n\r\n\r\n//修改定时任务状态\r\nexport const updateTimedTaskStatus = (params = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    http.post('/api/job/upStatusTask/v1', params)\r\n      .then(res => {\r\n        resolve(res)\r\n      })\r\n      .catch(err => {\r\n        reject(err)\r\n      })\r\n  })\r\n}\r\n//查询日志接口 \r\nexport const getLogList = (params = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    http.post('/api/job/getTableQuartzLogs/v1', params)\r\n      .then(res => {\r\n        resolve(res)\r\n      })\r\n      .catch(err => {\r\n        reject(err)\r\n      })\r\n  })\r\n}\r\n\r\n//执行定时任务接口\r\nexport const executeTimedTask = (params = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    http.post('/api/job/runTask/v1', params)\r\n      .then(res => {\r\n        resolve(res)\r\n      })\r\n      .catch(err => {\r\n        reject(err)\r\n      })\r\n  })\r\n}\r\n"],"sourceRoot":""}